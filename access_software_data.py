# -*- coding: utf-8 -*-
"""ACCESS_software_data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mOcb2RchcAYV4-6AO4W1I4223ww0d6D3
"""

pip install python-docx

import requests
import json
import re
import os
from docx import Document

api_url = "https://operations-api.access-ci.org/wh2/resource/v4/resource_esearch/?affiliations=access-ci.org&page_size=300000&resource_groups=software"
response = requests.get(api_url)

if response.status_code == 200:
    # Request was successful
    json_data = response.json()
    print("success")
else:
    print("Failed to retrieve data from the API")

print(json.dumps(json_data, indent = 4))

type(json_data)

type(json_data['results'])

if os.path.exists("software1.txt"):
  os.remove("software1.txt")
for results in json_data['results']:
  print('The software ', sep= '', end='', file=open('software1.txt', 'a')),
  if results['Type'] == 'Executable Software':
      print(results['Name'], sep='', end=' ', file=open('software1.txt', 'a')),
      print('can be found on ', end='', file=open('software1.txt', 'a'))
      for relations in results['Relations']:
        if relations['RelationType'] == 'Hosted On':
          print(relations['Name'],  end='.\n', file=open('software1.txt', 'a'))

software = {}
for results in json_data['results']:
  if results['Type'] == 'Executable Software':
    soft = results['Name']
    for relations in results['Relations']:
      if relations['RelationType'] == 'Hosted On':
        machine = relations['Name']
        try:
          software[soft].append(machine)
        except KeyError:
          software[soft] = [machine]

for item in software:
  software[item]=list(set(software[item]))

print(software)

type(software['gh'])

type(software)

if os.path.exists("software_by_software.txt"):
  os.remove("software_by_software.txt")
for key in software:
  print(' These Resource Providers(clusters) have the ', key, ' software installed:', sep= '', end='', file=open('software_by_software.txt', 'a'))
  accumulator=0
  for value in software[key]:
    length=len(software[key])
    if accumulator>=length-1 and length!=1:
      print(' and ', end='',file=open('software_by_software.txt', 'a'))
      print(value, end='. ', file=open('software_by_software.txt', 'a'))
    elif not accumulator>=length-1 and length!=1:
      print(value, end=', ', file=open('software_by_software.txt', 'a'))
    else:
      print(value, end='. ', file=open('software_by_software.txt', 'a'))

    accumulator+=1
  print('\n', end='', file=open('software_by_software.txt', 'a'))
  print('\n', end='', file=open('software_by_software.txt', 'a'))

"""software organized by cluster"""

software = {}
for results in json_data['results']:
  for relations in results['Relations']:
    if relations['RelationType'] == 'Hosted On':
      machine = relations['Name']
      if results['Type'] == 'Executable Software':
        soft = results['Name']
        try:
          software[machine].append(soft)
        except KeyError:
          software[machine] = [soft]

for item in software:
  software[item]=list(set(software[item]))

print(software)

if os.path.exists("software_by_machine.txt"):
  os.remove("software_by_machine.txt")
for key in software:
  print('The Resource Provider (cluster) ', key , ' has the following software installed: ', sep= '', end='', file=open('software_by_machine.txt', 'a'))
  accumulator=0
  for value in software[key]:
    length=len(software[key])
    if accumulator>=length-1 and length!=1:
      print(' and ', end='',file=open('software_by_machine.txt', 'a'))
      print(value, end='. ', file=open('software_by_machine.txt', 'a'))
    elif not accumulator>=length-1 and length!=1:
      print(value, end=', ', file=open('software_by_machine.txt', 'a'))
    else:
      print(value, end='. ', file=open('software_by_machine.txt', 'a'))

    accumulator+=1
  print('\n', end='', file=open('software_by_machine.txt', 'a'))
  print('\n', end='', file=open('software_by_machine.txt', 'a'))

file = open('software_by_machine.txt', 'r')
text= file.read()
doc = Document()
doc.add_paragraph(text)
doc.save('software_by_machine.docx')

file = open('software_by_software.txt', 'r')
text= file.read()
doc = Document()
doc.add_paragraph(text)
doc.save('software_by_software.docx')